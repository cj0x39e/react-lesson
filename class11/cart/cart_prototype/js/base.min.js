if ("undefined" == typeof HY || !HY) var HY = {};
/*异步请求公共头底部,使用程序时请删除*/
(function(){
	var ajaxhthml=function(id,url){
		var html =$.ajax({url:url,async:false}),
		    htmlObj= $("#"+id);
			htmlObj.html(html.responseText);
			htmlObj.children().unwrap();
	}
	$('div[htmlUrl]').each(function(){
		var url=$(this).attr("htmlUrl");
		var id=$(this).attr("id");
		ajaxhthml(id,url);
	});
	$("<script type=\"text/javascript\" src=\"./slink.js\"></script>").appendTo($("body"));
})();
/**
 * 下拉菜单
 * settings{
 * 	 elmObj : 下拉触发对象;
 *   elmCobj : 下拉触发显示对象;
 *   speed : 显示对象停留时间;
 *   cur : 选中后的Class名称;
 *   enteCall : mouseenter的回调拓展函数
 *   leaveCall : mouseenter的回调拓展函数；
 *   isPara : 是否使用自定义参数
 * }
 */
(function() {
	    var settings={
			   speed:1,
			   cur:"cur",
			   isArrow:true
			};
        var init=function(elmObj,elmCobj,mod,enteCall,leaveCall){
		         var timeOut=null;
			     if("hover"==mod){
					 elmObj.on({
			           mouseenter:function() {
						clearTimeout(timeOut);
		                $(this).addClass(settings.cur);
						if(settings.isArrow)$(this).find("i.arrow").addClass(settings.cur);
						elmCobj.show();
			            if(enteCall || leaveCall)enteCall.call(this);
			           },
			           mouseleave: function() {
			             timeOut = setTimeout(function() {
			                 close(elmObj,elmCobj);
			              },settings.speed)
						 if(enteCall || leaveCall)leaveCall.call(this);
			           }
				     })
					 elmCobj.on({
				           mouseenter: function() {
				              clearTimeout(timeOut);
				           },
				           mouseleave: function() {
				              timeOut = setTimeout(function() {
				                 close(elmObj,elmCobj);
				              },settings.speed)
							  if(settings.leaveCall)settings.leaveCall.call(this);
				           }
				     })
				}else{
				      elmObj.on("click",function(){
				       	      if(!elmCobj.is(":visible")){
								 clearTimeout(timeOut);
								 $(this).addClass(settings.cur);
								 if(settings.isArrow)$(this).find("i.arrow").addClass(settings.cur);
								 elmCobj.show();
			                     $(".popup-close").show();
				       	      }else{
				                  $(".popup-close").hide();
				                   close(elmObj,elmCobj);
				       	      }
					    })
				        $(".popup-close").on('click', function(e){
				        	 close(elmObj,elmCobj);
				        	 $(".popup-close").hide();
						});
						$(document).on('click', function(e){
					 	  var te=$(e.target);
					 	  if(te.closest(elmObj.selector).length==0 && te.closest(elmCobj.selector).length!=1){
					         close(elmObj,elmCobj);
					         $(".popup-close").hide();
					      }
					   });
					   var isSelect=elmObj.parent().attr("data-select")=='true'?true:false,
					       selectext=elmObj.children(".text");
					       selectli=elmCobj.find("li"),
					       len=selectli.length,
					       selectboxH=selectli.height()*len;
					       if(isSelect){
					       	    if(selectboxH<200){
					       	    	elmCobj.css("height",selectboxH)
					       	    }
						       	selectli.each(function(){
						       		 $(this).on("click",function(){
										var text=$(this).text(),val=$(this).attr("data-val");
										selectext.text(text);
										elmObj.attr("data-val",val);
										close(elmObj,elmCobj);
									 })
						       	})
					       }
				  }
			},
			//关闭popup方法
			close= function(elmObj,elmCobj) {
			        if(settings.isArrow)elmObj.find("i.arrow").removeClass(settings.cur)
			        elmObj.removeClass(settings.cur);
			        elmCobj.hide();
			}
			
		//内置遍历所有data-popup下拉
		var menu=$("[data-popup]");
		    menu.each(function(){
		        var _this=$(this),
				    elmObj=_this.find(".popup"),           
					elmCobj=_this.find(".popup-box"),
					mod=_this.data("popup"),
					isIndex=_this.attr("data-index")=="true"?true:false;
					!isIndex?init(elmObj,elmCobj,mod):elmCobj.show();
		    });
		    
		    HY.selectInit = init;
})();

/**
 * 分类菜单
 */
(function(el){
    var categorysUI=$(el),
        category=categorysUI.children(),
        categoryDD=category.children(),
	    subCategory = $('#subCategory'),
	    firstMoveIn = true;
	   var init=function(){
		   var timer;
			 categoryDD.on({
			   mouseenter:function() {
				 var index = $(this).index();
				  clearTimeout(timer);
				  $(this).hasClass('cur') || (show(),categoryDD.removeClass("cur").eq(index).addClass("cur"));	
			   },
			   mouseleave: function() {
                  timer = setTimeout(function() {
					 colse();
				  },50)	  
			   }
			 })
			 subCategory.on({
				   mouseenter: function() {
					  clearTimeout(timer);
				   },
				   mouseleave: function() {
					  timer = setTimeout(function() {
						 colse();
					  },50)
				   }
			 })
	      
	   },
	   colse=function(){
	     categoryDD.removeClass("cur");
         subCategory.hide().removeAttr("style")
		 firstMoveIn = true;
	   },
	   show=function(){
	   	       //分类数据渲染
			   var source = '<div class="sub">'
					+    '{{each sub}}'
					+         '<dl>'
					+	     	'<dt>{{$value.name}}</dt>'
					+	     	'<dd>'
					+          '{{each $value.subcon as val i}}'
					+             '<a href="{{val.url}}">{{val.sname}}</a>{{if $value.subcon.length-1!==i}}<i class="s"></i>{{/if}}'
				    +          '{{/each}}'
				    +	     	'</dd>'
					+	     '</dl>'
					+    '{{/each}}'
					+ '</div>'
					+ '<div class="r-brand">'
					+ '<h3>推荐品牌</h3>'
					+ '<div class="ul">'
					+ '<ul>'
					+    '{{each brand}}'
					+       '<li><a href="{{$value.url}}"><img src="{{$value.imgurl}}" /></a></li>'
					+    '{{/each}}'
					+  '</ul>'
		            +  '</div>'
		            +  '<div class="ad-g-1">'
		            +     '<a href="{{ad.url}}"><img src="{{ad.imgurl}}" /></a>'
		            +   '</div>';
				    + '</div>';
				    +  '</div>'
				var render = template.compile(source);
				//分类数据源
				var html = render({
				    sub:[
				         {
				         	name:'新鲜水果',
				         	subcon:[{sname:'苹果',url:'#'},{sname:'柠檬',url:'#'},{sname:'桔子',url:'#'},{sname:'梨子',url:'#'},{sname:'火龙果',url:'#'},{sname:'哈密瓜',url:'#'},{sname:'木瓜',url:'#'},{sname:'猕猴桃',url:'#'},{sname:'红提',url:'#'}]
				         },
				          {
				         	name:'肉禽蛋奶',
				         	subcon:[{sname:'猪肉',url:'#'},{sname:'牛肉',url:'#'},{sname:'羊肉',url:'#'},{sname:'鸡鸭',url:'#'},{sname:'淡水鱼',url:'#'},{sname:'鹌鹑',url:'#'},{sname:'咸水鱼',url:'#'},{sname:'海鲜',url:'#'},{sname:'腊味',url:'#'}]
				         },
				          {
				         	name:'蔬菜豆制品',
				         	subcon:[{sname:'猪肉',url:'#'},{sname:'牛肉',url:'#'},{sname:'羊肉',url:'#'},{sname:'鸡鸭',url:'#'},{sname:'淡水鱼',url:'#'},{sname:'鹌鹑',url:'#'},{sname:'咸水鱼',url:'#'},{sname:'海鲜',url:'#'},{sname:'腊味',url:'#'}]
				          },
				          {
				         	name:'肉禽蛋奶',
				         	subcon:[{sname:'猪肉',url:'#'},{sname:'牛肉',url:'#'},{sname:'羊肉',url:'#'},{sname:'鸡鸭',url:'#'},{sname:'淡水鱼',url:'#'},{sname:'鹌鹑',url:'#'},{sname:'咸水鱼',url:'#'},{sname:'海鲜',url:'#'},{sname:'腊味',url:'#'}]
				          }
					  ],
					brand:[
                            {imgurl:'img/b-1.png',url:'#'},
				         	{imgurl:'img/b-2.png',url:'#'},
				         	{imgurl:'img/b-3.png',url:'#'},
				         	{imgurl:'img/b-4.png',url:'#'},
				         	{imgurl:'img/b-5.png',url:'#'},
				         	{imgurl:'img/b-6.png',url:'#'}
					],
					ad:{imgurl:'img/ad-g-1.jpg',url:'#1'}
				});
				subCategory.html(html).show();
				var subCategoryWidth=subCategory.width(),subh=subCategory.children('.sub').height();
				if(subh>subCategory.height())subCategory.css({'height':subh})
				if(firstMoveIn){
					subCategory.css({width:0}).stop(true,false).animate({width:subCategoryWidth},200);
				}else{
			   	    subCategory.css({width:subCategoryWidth});
				}
				firstMoveIn=false;
	   }
	   init();
})("#categorysUI");

/**
 * 图片播放
 * settings{
 * 	 element : 图片播放对象;
 * 	 speed : 图片播放时间;
 *   autoTime : 播放时间;
 *   autoplay : 是否自动播放;
 *   isNum : 是否开启数字显示;
 *   pos:"left"：切换方式 left|top
 * }
 */

HY.slides=function(options) {
	var defaults = {
		    element:"[data-slides]",
			speed : 400,
			autoTime:3000,
			autoplay : true,
			isNum:false,
			mod:"mod",
			isControlNav:true,
			isSideBtn:true,
			loadCall:null
		};
		var config = $.extend(defaults,options);
		var _slides=$(config.element),
		    _slidesW=_slides.width(),
		    _slidesUL=_slides.children("ul"),
		    _slidesLI=_slidesUL.children("li"),
		    _slidesLIW=_slidesLI.outerWidth(),
			_slidesLen=_slidesLI.length,
			_slidesH=_slidesLI.height(),
		    index=0,
			posindex=1,
		    picTimer,
			mod=config.mod;

		var slidea=function(){
			this._thisULW = _slidesUL.width();
			 if(mod=='mod'){
				 _slidesLI.css("display","none").eq(0).css("display","list-item");
			 }else{
				_slidesUL.append( _slidesLI.eq(0).clone(true));
				_slidesUL.prepend( _slidesLI.eq(_slidesLen-1).clone(true)); 
				if(mod=="top"){
				  _slidesUL.css({'height':_slidesH+'px','margin-top': -_slidesH+'px'});
				}else{	
				  _slidesUL.css({'width':(_slidesLen+2)*_slidesLIW+'px','margin-left': -_slidesLIW+'px'});
				}
			 }
		}
		slidea.prototype={
			init:function(){
				this.controlNav();
				this.autoplay();

			},
			controlNav:function(){
				var _this=this,html='';
				    if(config.isSideBtn)html+="<span class='arrow side_pre'><i></i></span><span class='arrow side_next'><i></i></span>";
				    if(config.isControlNav){
					    html+= "<div class='promo-nav'>";
						for(var i=0; i < _slidesLen; i++) {
						  var a=config.isNum?i+1:'';
						  var cur=i==0?" class='i cur'":" class='i'";
						  html += "<span"+cur+" data-index="+(i+1)+">"+a+"</span>";
						}
						html += "</div>";			    	
				    }
				if(config.isControlNav){
					_slides.append(html);
					_slides.find(".promo-nav span").each(function(){
					   $(this).on("click",function() {
							if(mod=='mod'){
							    if($(this).hasClass('cur'))return;
								index = parseInt($(this).data('index'))-1;
							   _this.slidesMod(index);
							}else{
							  if (_slidesUL.is(':animated') || $(this).attr('class')=='cur')return;
							  var myIndex = parseInt($(this).data('index')),
								 offset = -_slidesW * (myIndex-posindex);
								 _this.slidesPos(offset);
								  posindex = myIndex;
								 _this.showButton();
							}
						});
					})
				}
			},
			slidesMod:function(index){
			    var _this=this;
				 _slidesLI.stop(true,true).fadeOut(config.speed).eq(index).stop(true,true).fadeIn(config.speed);
				 if(config.loadCall)config.loadCall(index);
				_this.showButton(index);
			},
			slidesPos:function(offset,elt){
			    var _this=this,
			        margin=mod=="top"?"marginTop":"marginLeft",
			        sMarwh=mod=="top"?_slidesH:_slidesW;
			    if(_slidesUL.is(":animated"))return;
	
				if(elt!==null && elt!==''){
					if(elt=='next'){
					   posindex == _slidesLen?posindex = 1:posindex += 1;
					}else{
					   posindex == 1?posindex = _slidesLen:posindex -= 1;
					}
				}
				var left = parseInt(_slidesUL.css(margin)) + offset;
				
				if (offset>0) {
					offset = '+=' + offset;
				}
				else {
					offset = '-=' + Math.abs(offset);
				}
				_slidesUL.animate(mod=='top'?{"marginTop": offset}:{"marginLeft": offset}, config.speed, function () {
					if(left > -1){
						_slidesUL.css(margin, -offset * _slidesLen);
					}
					
					if(left < (-sMarwh * _slidesLen)) {
						_slidesUL.css(margin, -_slidesH);
					}
				});				
				_this.showButton(posindex);
			},
			autoplay:function(){
			   if(config.autoplay){
					var _this=this;
					_slides.hover(function() {
					  clearInterval(picTimer);
					},function() {
					picTimer = setInterval(function() {
							 if(mod=="mod"){
							   index++;
							   if(index == _slidesLen) {index = 0;}
							   _this.slidesMod(index)
							 }else{
								mod=='top'?_this.slidesPos(-_slidesH,'next'):_this.slidesPos(-_slidesW,'next');
							 }
						},config.autoTime); 
					}).trigger("mouseleave");
			  }
			},
			showButton:function(index){
			   var promoNav=_slides.find(".promo-nav span");
			   if(mod){
			     promoNav.removeClass("cur").eq(index).addClass("cur");
			   }else{
			     promoNav.eq(posindex-1).addClass("cur").siblings().removeClass("cur");
			   }
			}
		}
		var slide=new slidea();
		  slide.init()
		 _slides.children('.side_next').on('click',function(){
			if(mod=="mod"){
			    if(_slidesUL.is(":animated"))return;
			    index++;
			    if(index==_slidesLen)index=0;
                slide.slidesMod(index);			
			}else{
				mod=='top'?slide.slidesPos(-_slidesH,'next'):slide.slidesPos(-_slidesW,'next');
			}
		 });
		
		 _slides.children('.side_pre').on('click',function(){
			 if(mod=="mod"){
			    if(_slidesUL.is(":animated"))return;
				if(index==0)index=_slidesLen;
                index--;
                slide.slidesMod(index);			
			 }else{
				mod=='top'?slide.slidesPos(_slidesH,'pre'):slide.slidesPos(_slidesW,'pre');
			 }
		 });
		 HY.slidepos=slide.slidesPos;
};
/**
 * 左右切换
 * settings{
 * 	 element : dom对象ID;
 * 	 speed : 动画切换时间;
 *   iscontrolNav : 是否分页导航;
 *   oneAllsize :  一屏滚动多少个数
 *   jscroll :  切换效果  scroll1|scroll2;
 *   isPage : 是否显示分页数;
 *   pos:"left"：切换方式top|left
 *   isSingle : 是否开启切换单个
 *   inCall:移动去移出的回调函数
 * }
 */
HY.mscroll=function(options){
	var settings={
		   element:'[data-mscroll]',
		   speed:500,                     
		   oneAllsize:1,
           jscroll:'scroll1',		   
           isSingle:false,
           pagewrap:false,
           scrolltype:"prenext",
           pos:"left",
		   inCall:null,
		   inEvent : '' 
		   
		};

	var config=$.extend(settings,options);
	var _mscroll=$(config.element),
	    _mscrollW=_mscroll.width(),
	    _mscrollH=_mscroll.height(),
		_mscrollUL=_mscroll.find('ul'),
		_mscrollLI=_mscrollUL.children('li'),
		_mscrollLiw=_mscrollLI.outerWidth(true),
		_mscrollLih=_mscrollLI.outerHeight(true),
		_mscrollLen=_mscrollLI.length,
		_pagesize=config.oneAllsize,
		isPostop=config.pos=='top'?true:false,
		//_mscrollMc=$(document,_mscroll.children(".mc")),
		_index=0,_page;
		if(_mscrollLen%_pagesize===0){
		   _page=_mscrollLen/_pagesize;
		}else{
		   _page=parseInt(_mscrollLen/_pagesize)+1;
		}
		var p=config.isSingle?_mscrollLen-config.oneAllsize:_page-1;
	var scroll=function(){
		 this._mscrollULW = _mscrollUL.width();
		 this._mscrollULH = _mscrollUL.height();
		 this._SingleNum=isPostop?_mscrollUL.height()-_mscrollH:_mscrollUL.width()-_mscrollW;
		 this.isAnim=_mscrollUL.is(":animated");
		 if(config.pagewrap)_mscrollUL.wrap("<div class='mc'></div>");
	  }
	
	 scroll.prototype={
		 init:function(){
			 var _this=this;
			 _this.mhover();
			 var preNext="";
             switch(config.scrolltype){
                case "prenextnav":
                     preNext+="<div class='controlNav'><span class='arrow pre'></span>";
                     for(i=1;i<=_page;i++){
					   var cur=i==1?" class='cur'":'';
					   preNext+="<span"+cur+"></span>";
					 } 
                     preNext+="<span class='arrow next'></span></div>";
                     break;
                case "nav":
                     preNext+="<div class='controlNav'>";
                     for(i=1;i<=_page;i++){
					   var cur=i==1?" class='cur'":'';
					   preNext+="<span"+cur+"></span>";
					 } 
                     preNext+="</div>";
                      break;
                case "page":
                     preNext+="<div class='controlNav'>1/"+_page+"</div>";
                      break;
                case "prenext":
                     preNext+="<span class='arrow pre'><i></i></span><span class='arrow next'><i></i></span>";
                      break;
             }
			 $(config.element).append(preNext); 	
			 $(document).on('click',config.element+' .controlNav span',function(){
				var index=$(this).index();
				_this.jscroll1(index);
			 });
		 },
		 //鼠标移进效果
		 mhover:function(ele){
		 	if(config.inEvent === 'click'){
		 		_mscrollLI.on('click',function(){
					 var el=$(this);
					 if(config.inCall)config.inCall(el);
				});
		 	}else{
		 		_mscrollLI.mouseenter(function(){
				 	var el=$(this);
				 	if(config.inCall)config.inCall(el);
				});	
		 	}
		 },
		 //切换函数1
		 jscroll1:function(index){
			 if(!this.isAnim){
				var ulboxML = parseInt(_mscrollUL.css('marginLeft').replace('px','')),sMargin;
				if(index==p){
				    sMargin=(_mscrollUL.width()-_mscrollUL.parent().width())-(_mscrollLiw-_mscrollLI.outerWidth());
				}else{
					sMargin=config.isSingle?_mscrollLiw*index:_mscrollW*index;
				}
				_mscrollUL.stop().animate({marginLeft:"-"+sMargin+'px'},config.speed);
                 
				if(config.scrolltype=='page'){
                    $(config.element+' .controlNav').html((index+1)+'/'+_page);
                }else{
                    $(config.element+' .controlNav span').eq(index).addClass('cur').siblings('span').removeClass('cur');
                }
			 }
		 },
		 //切换函数2
		 jscroll2:function(elt,mod){
		 	var margin=isPostop?"margin-top":"margin-left",
		 	    ulboxML = parseInt(_mscrollUL.css(margin).replace('px','')),
				ulboxWh=isPostop?this._mscrollULH:this._mscrollULW,
				getAttrLeft=this._SingleNum,msrcow,
				_msMc=_mscroll.children(".mc");
				if(isPostop){
					msrcow=config.pagewrap?_msMc.height():_mscrollH;
				}else{
					msrcow=config.pagewrap?_msMc.width()+(_mscrollLiw-_mscrollLI.outerWidth()):_mscrollW;
				}
				var setNum = ulboxWh+ulboxML-msrcow;
				
			var isMargintop=function(o,l){
					if(typeof o=="number"){
						l='';c=o;
					}else{
						c=o=='-'?"-=":"+=";
					}
                    var margin=isPostop?{"marginTop":c+l+'px'}:{"marginLeft":c+l+'px'};
				    _mscrollUL.stop().animate(margin,config.speed);
				}
			if(!this.isAnim){
				if(config.isSingle){
					if(mod=='next'){
						if(-ulboxML==getAttrLeft)return;
						isMargintop("-",_mscrollLiw);
					}else{
					   if(-ulboxML<=0)return;
					    isMargintop("+",_mscrollLiw);		
					}
				}else{
					if(mod=='next'){
						 setNum<=msrcow?isMargintop("-",setNum):isMargintop("-",msrcow);
					}else{
						-ulboxML<=msrcow?isMargintop(0):isMargintop("+",msrcow)
					}
					
				}
			}
		 } 
	 }
	 if(isPostop){
	 	 _mscrollUL.css({'height':_mscrollLen*_mscrollLih+'px'});
	 }else{
	   	 _mscrollUL.css({'width':_mscrollLen*_mscrollLiw+'px'});	
	 }
	 var mscroll=new scroll(); //切换实例化
	 mscroll.init();
	 $(document).on('click',config.element+' .next',function(){
		if(config.jscroll=='scroll2'){
		    mscroll.jscroll2(this,'next');
		}else{
			if(_index==p)return; 
			_index++;
			mscroll.jscroll1(_index);
		}
		
	 });
	
	 $(document).on('click',config.element+' .pre',function(){
		if(config.jscroll=='scroll2'){
		    mscroll.jscroll2(this,'pre');
		}else{
		    if(_index==0)return;
			_index--;
			mscroll.jscroll1(_index);
		}
	 });
};
/**
 * TAB切换
 * settings{
 * }
 */
HY.tab=(function(el){
	var _uitab=$(el);
	_uitab.each(function(){
	    var _mod=$(this).attr("mod")=="hover"?"mouseenter":$(this).attr("mod"),
            iSajax=$(this).attr("data-ajax")=="true"?true:false;
        var _uitabul=$(this).find('.ui-tab-nav'),
            _uitabli=_uitabul.find('li'),
            _uitaba=_uitabli.children('a'),
            _ulen=_uitabli.length;
		if(_mod!==undefined){
            _uitaba.on(_mod,function(e){
                    e.preventdefault;
                var fixedNav=_uitabul.children('.tab-nav').length==1?true:false;
                var _parent = $(this).parent(),
                    _uitabaHerf=$(this).attr('href'),
                    index=$(this).parent().index(),
                    prevIndex=$(this).parent().prev().index();
                 //检测是不是点击评论
                 if(_uitabaHerf!=="#comment"){
                     if(fixedNav){
                        var top=$(window).scrollTop(),
                            tabtop=$('#goodsShowTab').offset().top;
                            if(top>tabtop)$('html,body').stop().animate({"scrollTop":tabtop});
                            if(index==_ulen-1)index=prevIndex;
                     }
                    var list=$(this).attr("data-list"); 
                    var _uitabcon=$(this).parents('.ui-tab-nav').siblings('.ui-tab-con').children();
                        _parent.prev().children('.u-gap').hide();		
                        _uitabcon.eq(index).removeClass("hide").siblings().addClass("hide");
                        //判断是否是异步提交
                         if(iSajax)tabAjax( _uitabcon.eq(index),list)
                  }else{
                    var comment=$("#comment").offset().top;
                        $('html,body').stop().animate({"scrollTop":comment})
                  }
                 _parent.addClass("cur").siblings().removeClass("cur").children('.u-gap').show();
             });
            if(iSajax)_uitaba.eq(0).trigger("click");
        } 
        
	})
    //异步提交方法
    function tabAjax(conId,list){
           //数据源
           var data={ 
                 attention:[
                    {imgurl:'img/ss.jpg',url:'#',name:"Apple苹果iPhone6Plus64GTD",url:"#1",price:"99"},
                    {imgurl:'img/ss2.jpg',url:'#',name:"Apple/苹果iPhone6电信版全网通",url:"#1",price:"99"},
                    {imgurl:'img/ss.jpg',url:'#',name:"特2014春装新款棉麻衬衣宽松休闲大码",url:"#1",price:"99"},
                    {imgurl:'img/ss2.jpg',url:'#',name:"特2014春装新款棉麻衬衣宽松休闲大码...",url:"#1",price:"99"},
                    {imgurl:'img/ss2.jpg',url:'#',name:"特2014春装新款棉麻衬衣宽松休闲大码...",url:"#1",price:"99"},
                    {imgurl:'img/ss.jpg',url:'#',name:"特2014春装新款棉麻衬衣宽松休闲大码...",url:"#1",price:"99"},
                    {imgurl:'img/ss.jpg',url:'#',name:"特2014春装新款棉麻衬衣宽松休闲大码...",url:"#1",price:"99"},
                    {imgurl:'img/ss.jpg',url:'#',name:"特2014春装新款棉麻衬衣宽松休闲大码...",url:"#1",price:"99"},
                    {imgurl:'img/ss.jpg',url:'#',name:"特2014春装新款棉麻衬衣宽松休闲大码...",url:"#1",price:"99"}
                 ],
                  attenshop:[
                    {imgurl:'img/dp1.jpg',level:'5',name:"英迈思品牌自营店",gurl:"#"},
                    {imgurl:'img/dp2.jpg',level:'3',name:"英迈思品牌自营店",gurl:"#"},
                    {imgurl:'img/dp2.jpg',level:'2',name:"英迈思品牌自营店",gurl:"#"},
                    {imgurl:'img/dp1.jpg',level:'1',name:"英迈思品牌自营店",gurl:"#"},
                    {imgurl:'img/dp2.jpg',level:'2',name:"英迈思品牌自营店",gurl:"#"},
                    {imgurl:'img/dp1.jpg',level:'4',name:"英迈思品牌自营店",gurl:"#"},
                    {imgurl:'img/dp2.jpg',level:'1',name:"英迈思品牌自营店",gurl:"#"},
                    {imgurl:'img/dp2.jpg',level:'5',name:"英迈思品牌自营店",gurl:"#"},
                  ]
           }
           
           //数据渲染
          var source;
            if(list=='attenshop'){
               source='<ul class="recommend cl">'
                +    '{{each '+list+'}}'
                +         '<li>'
                +	     	'<div class="r-img">'
                +	     	  '<a href="{{$value.gurl}}"><img src="{{$value.imgurl}}" alt="{{$value.name}}"></a>'
                +	     	'</div>'
                +	     	'<div class="r-text">'
                +	     	  '<a href="{{$value.gurl}}" class="a">{{$value.name}}</a>'
                +	     	'</div>'
                +	     	'<div class="pj pj{{$value.level}}"></div>'
                +	     	'<a href="{{$value.gurl}}" class="btn-browse">浏览</a>'
                +	     '</li>'
                +    '{{/each}}'
                +    '</ul>'
            }else{
               source='<ul class="recommend cl">'
                +   '{{each '+list+'}}'
                +         '<li>'
                +	     	'<div class="r-img">'
                +	     	  '<a href="{{$value.url}}"><img src="{{$value.imgurl}}" alt="{{$value.name}}"></a>'
                +	     	'</div>'
                +	     	'<div class="r-text">'
                +	     	  '<a href="{{$value.url}}">{{$value.name}}</a>'
                +	     	'</div>'
                +	     	'<div class="r-price">'
                +	     	  '<span class="c6">￥{{$value.price}}</span>'
                +	     	'</div>'
                +	     '</li>'
                +    '{{/each}}'
                +    '</ul>'
            }
            var render = template.compile(source);
            //数据源
            var html = render(dataS || data);
            conId.html(html);
            var boxid="#"+conId.attr("id");
            HY.mscroll({
                  element:boxid,
                  pagewrap:true,
                  jscroll : 'scroll2'
            });
        }
        HY.tabAjax=tabAjax;
})('.ui-tab');

/**
 * 公共弹窗
 * settings{
 *    type:null,            弹窗类型,用于在弹出层中增加不可控制的Clsss
 *    msgCon:'',            弹出的内容文本
 *    autoTime:null,        自动关闭时间
 *    area:[null,null],     弹出层的宽高
 *    title:'',             弹层顶部文本
 *    laodhtml:'',          外部数据加载
 *    shade:true,           点击遮罩层关闭
 *    shadeClose:true,      不显示遮罩层
 *    loading:'',           加载层提示类型
 *    confbtn:{
 * 	     btns: 1,
 * 	     btn:['确定','取消'],
 *       yes:null,
 *       no:null
 *    }
 *    colse:,               全局关闭方法
 *    end:null              终极结束
 * }
 */
;!function(win){ 
	
      var index = 0,
           timer={},
           zIndex=19890305,
           classs = ['ui-dialog','ui-mask'];
        
      var _dialog = function(options){
       	  var that = this;
       	  var settings={
	       	  	  type:null,
	       	  	  msgCon:'',
	       	  	  autoTime:null,
	       	  	  area:[null,null],
	       	  	  title:'',
	       	  	  laodhtml:'',
	       	  	  shade:true,
	       	  	  shadeClose:true,
	       	  	  loading:'',
	       	  	  confbtn:{btns: 1,btn:['确定','取消'],yes:null,no:null},
	       	  	  colse:function(index){
	       	  	  	that.closeA(index);
	       	  	  },
	       	  	  end:null,
	       	  	  htmlfun:null
       	    }
	      that.config= $.extend({},settings,options);
	      that.configbtn = $.extend({}, settings.confbtn , options.confbtn);
	      that.view();//创建dialog框架模板
	      $(window).resize(function(){
				that.pos();
		   })
	    }
	    
        _dialog.prototype={
        	index:index,
        	view:function(){
        		var that= this,html="",conf=that.config,confbtn=that.configbtn;
        		    html+='<div class="ui-dialog" id="'+classs[0]+"-"+index+'" index="'+index+'" style="z-index:'+zIndex+'" >';
        		    html+='<div class="ui-dialog-main '+conf.type+'" style="z-index:'+(zIndex+1)+'">';
        		    if(conf.title!=='' && conf.title!==null && conf.type!=='ui-d-msg')html+='<div class="ui-dialog-title"><span class="f-l">'+that.config.title+'</span></div>';
        		    html+='<div class="ui-dialog-con"></div>';
                    switch(confbtn.btns){
			            case 0:
			                html+='';
			            break;
			            case 1:
			                html+='<div class="ui-dialog-btn"><a href="javascript:;" class="btn-yes">'+confbtn.btn[0]+'</a></div>';
			            break;
			            case 2:
			                html+='<div class="ui-dialog-btn"><a href="javascript:;" class="btn-yes">'+confbtn.btn[0]+'</a><a href="javascript:;" class="btn-no">'+confbtn.btn[1]+'</a></div>';
			            break;                
			        }
                    if(conf.type!=='ui-d-msg')html+='<i class="colseDialog icon"></i>';
        		    html+='</div>';
        		    if(conf.shade)html+='<div class="ui-dialog-mask" id="'+classs[1]+'" style="z-index:'+(zIndex-1)+'"  ></div>';
        		    html+= '</div>';
	        		$("body").append(html);
	        		that.dialogid = elem = $("#"+classs[0]+"-"+index);
	        		that.getHTML();
	        		that.index = index++;
	        		that.zIndex = zIndex++;
	        		that.action(elem);
	        		//定位
	        		var dmain=that.dialogid.children(".ui-dialog-main");
        		     that.diaw=dmain.outerWidth(true);
        		     that.diah=dmain.outerHeight(true);
        		     that.dw=conf.area[0]!==null?conf.area[0]: that.diaw;
        		     that.dh=conf.area[1]!==null?conf.area[1]:that.diah;
	        		 that.dialogid.children(".ui-dialog-main").css({"width":that.dw,"height":that.dh});
	        		 that.pos();
        	},
        	pos:function(){
        		 var that = this,
        		     winw=$(window).width(),
        		     winh=$(window).height(),
        		     left=(winw-that.dw)/2,top=(winh-that.dh)/2;
        		     that.dialogid.children(".ui-dialog-main").css({"top":top,"left":left});
        	},
        	action:function(elem){
	        		var that = this,conf=that.config;
	        		    elembtn=elem.find(".ui-dialog-btn"),
	        		    elembtnYES=elembtn.children(".btn-yes"),
	        		    elembtnNO=elembtn.children(".btn-no"),
	        		    elembtnNO=elem.find(".btn-no"),
	        		    elemshade=elem.children(".ui-dialog-mask"),
	        		    elemclose=elem.find(".colseDialog");
	    		   //自动关闭
				    if(conf.autoTime){
				        timer[that.index] = setTimeout(function(){
				            that.closeA(that.index);
				        }, conf.autoTime*1000);
				    }
				    //关闭按钮
			       elemclose.on("click",function(){
			       	   that.closeA(that.index);
			       })
			       elembtnYES.on("click",function(){
			       	   conf.confbtn.yes==undefined ? conf.colse(that.index):conf.confbtn.yes(that.index);
			       	   //that.closeA(that.index);
			       })
			       elembtnNO.on("click",function(e){
			       	   conf.confbtn.no==undefined ? conf.colse(that.index) : conf.confbtn.no(that.index);
			       	   that.closeA(that.index);
			       })
			        //点遮罩关闭
				    if(conf.shade && conf.shadeClose){
				        elemshade.on("click",function(){
				        	that.closeA(that.index);
				        })
				    }

	    	},
        	getHTML:function(){
        	  var that = this,markup,conf=that.config;
        	     if(conf.msgCon=='' || conf.msgCon==null){
        	     	markup=conf.laodhtml
        	     }else{
        	     	 if(conf.loading){
                        markup='<span class="loadding">'+(((conf.loading!=='none') && ('<i class="icon '+conf.loading+'"></i>')) || '') +conf.msgCon+'</span>';
        	     	 }else{
        	     	 	markup=conf.msgCon;
        	     	 }
        	     }
                 that.dialogid.find(".ui-dialog-con").html(markup);
                 if(conf.htmlfun!==null && typeof conf.htmlfun==='function')conf.htmlfun();
        	},
		    closeA:function(index){
		     var that = this,$dialogbox=$("#"+classs[0]+"-"+index);
		    	if(!$dialogbox)return;
		    	$dialogbox.hide().remove();
		    	clearTimeout(timer[index]);
		    	delete timer[index];
		    	typeof that.config.end ==="function" && that.config.end();
		    	delete that.config.end; 
		    }
        }
        $.layer = function(options){
	        var o = new _dialog(options);
	        return o;
	    };
	   //核心方法
       var layer = {
		    alert: function(msg,fn){
		    	var conf = {
		            type:"ui-alert",
		            title:'提示',
		       	    msgCon:msg,
		       	    confbtn:{btns:1,yes:fn}
		        };
		        
		       return $.layer(conf);
		    },
		    confirm: function(msg,title,fn1,fn2){
		    	var conf = {
		    		title:title,
		            type:"ui-d-confirm",
		       	    msgCon:msg,
		            confbtn:{btns:2,yes:fn1,no:fn2}
		        };
		        if(typeof title === 'function'){
		        	conf.fn1 = title;
		        	conf.fn2 = fn1;
		        }
		       return $.layer(conf);
		    },
		    msg:function(msg,time,type,end){
		    	var conf = {
		    		   	type:"ui-d-msg",
			    		msgCon:(msg === '' || msg === undefined) ? '&nbsp;' : msg,
			        	shadeClose:false,
			        	autoTime:time === undefined ||  typeof time === 'function'? 2 : time,
			        	confbtn:{btns:0},
			        	loading:type === undefined?'ok':type,
			        	end:end
			        };
                    if(typeof time === 'function') {
			            conf.end = time
			        }
                    if(typeof time === 'string'){
                    	conf.loading = time;
                    	conf.autoTime=2;
                    	
                    }
                    if(typeof type === 'function'){
                    	conf.end = type
                    	
                    }
                    
			        return $.layer(conf);
		    },
		    htmlWp:function(conf){
		        return $.layer(conf);
		    }
		};
       "function" === typeof define ? define(function() {
		    return layer;
		 }) : win.layer = layer;
		
}(window);
/*
 * 评级；
 * 在需要评价的标签上加上 data-pj 属性；
 */
(function(ele){
	$(ele).each(function(){
		var 
			pjWrap = $(this),
			pjItem = null,
			className = 'pj',
			pjItemHtml = '',
			index = 1,
			curMoveClass = className + index,
			curClickClass = curMoveClass;
		for(var i=0;i<5;i++){
			pjItemHtml += '<i></i>';
		}
		pjItem = pjWrap.append(pjItemHtml).children('i');
		pjItem.on({
			mouseover : function(){
				pjWrap.removeClass(curMoveClass).addClass((curMoveClass = className + (pjItem.index($(this))+1)));
			},
			mouseout : function(){
				pjWrap.removeClass(curMoveClass).addClass((curMoveClass = curClickClass));
			},
			click : function(){
				index = pjItem.index($(this))+1;
				curMoveClass = curClickClass = className + index;
				pjWrap.addClass(curClickClass).attr('data-pj',index);
			}
		});
	});
})('[data-pj]');
/*
 * 
 * 下拉固定DIV
 */
HY.scrollDiv=function(scrollobj){
	var Scroll=$(scrollobj),
	    sh=Scroll.outerHeight(true),
	    stop=Scroll.find(".categorysUI").outerHeight(true)+sh-1,
	    Scrolltop=Scroll.offset().top;
       var left=Scroll.offset().left;
       var top=Scroll.offset().top;
       var doh=$(document).height();
       var winw=$(window).height();
       var fh=$(".footer").height();
       var ieh=$.browser.msie?26:0;   //判断IE内核
       $(window).scroll(function(){
       	     var scrolltop=$(this).scrollTop(),
       	         toph=$(".footer").offset().top-sh-Scrolltop+ieh,
       	         dheight=doh-scrolltop;
       	        // alert("$(".footer").offset().top")
			if(scrolltop>Scrolltop&& ((doh-scrolltop) > (winw+fh/2-sh))){
				 $(scrollobj).removeAttr("style").css({"position":"fixed","top":0,"left":left});
			}else{
  			  if(scrolltop>Scrolltop && ((doh-scrolltop) <= (winw+fh))){
			     $(scrollobj).removeAttr("style").css({"position":"absolute","top":toph-stop,"left":0});
			  }else{
			  	$(scrollobj).removeAttr("style");
			  }
			}
       })
}
$(function(){

	/*
	 * 浏览记录 | 根据您的浏览记录猜您喜欢
	 */
	$(".recommend2").each(function(){
     	var _this="#"+$(this).attr("id");
     	 HY.mscroll({
			  element:_this,
			  pagewrap:true,
			  jscroll : 'scroll2'
		 });
     })
	/*
	 * 会员中心我的订单移添加边框
	 */
	$(".success-order").on({
		  mouseenter:function() {
			   $(this).addClass("hover"); 
		   },
		   mouseleave: function() {
               $(this).removeClass("hover"); 
		   }
	})
});